{"version":3,"sources":["components/Images/Jag.jpg","components/Cards/Project.js","components/Cards/Contact.js","components/Cards/Jumbotron.js","components/Home.js","components/NavMenu.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Project","className","CardDeck","Card","Img","variant","src","this","props","imageOne","Body","Title","firstTitle","Text","firstText","Button","a","href","firstBtn","target","btnTxt","imageTwo","secondTitle","secondText","secondBtn","btnTxtTwo","Component","Contact","state","repos","fetch","then","res","json","data","setState","length","CardGroup","type","link","thirdTitle","Jumbotron","class","Jag","alt","intro","description","text","Home","id","Link","displayName","name","NavMenu","toggleNavbar","bind","collapsed","Layout","Container","content","children","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,iC,qSCOtBC,G,6KAEjB,OACE,kBAAC,IAAD,CAAWC,UAAU,+BACnB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMF,UAAU,YACd,kBAACE,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKC,KAAKC,MAAMC,WACxC,kBAACN,EAAA,EAAKO,KAAN,KACE,kBAACP,EAAA,EAAKQ,MAAN,KAAaJ,KAAKC,MAAMI,YACxB,kBAACT,EAAA,EAAKU,KAAN,KAAYN,KAAKC,MAAMM,WACvB,kBAACC,EAAA,EAAD,CACEd,UAAU,kBACVe,GAAC,EACDC,KAAMV,KAAKC,MAAMU,SACjBC,OAAO,UAENZ,KAAKC,MAAMY,UAIlB,kBAACjB,EAAA,EAAD,CAAMF,UAAU,YACd,kBAACE,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKC,KAAKC,MAAMa,WACxC,kBAAClB,EAAA,EAAKO,KAAN,KACE,kBAACP,EAAA,EAAKQ,MAAN,KAAaJ,KAAKC,MAAMc,aACxB,kBAACnB,EAAA,EAAKU,KAAN,KAAYN,KAAKC,MAAMe,YACvB,kBAACR,EAAA,EAAD,CACEd,UAAU,kBACVe,GAAC,EACDC,KAAMV,KAAKC,MAAMgB,UACjBL,OAAO,UAENZ,KAAKC,MAAMiB,cAKpB,kC,GApC6BC,c,QCDhBC,G,wDACnB,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CACXC,MAAO,IAHQ,E,gEAME,IAAD,OAClBC,MAAM,+CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZN,MAAOK,EAAKE,c,+BAMlB,OACE,kBAAC,IAAD,CAAWnC,UAAU,mBACnB,kBAACoC,EAAA,EAAD,CAAWpC,UAAU,8BACnB,kBAACE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CACEH,UAAU,iBACVI,QAAQ,MACRC,IAAI,gFAEN,kBAACH,EAAA,EAAKO,KAAN,CAAWT,UAAU,uBACnB,kBAACE,EAAA,EAAKQ,MAAN,KAAaJ,KAAKC,MAAMI,YACxB,kBAACT,EAAA,EAAKU,KAAN,CAAWZ,UAAU,WACnB,uBACEqC,KAAK,SACLrC,UAAU,kBACVe,GAAC,EACDC,KAAMV,KAAKC,MAAM+B,KACjBpB,OAAO,UALT,eAYN,kBAAChB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CACEH,UAAU,iBACVI,QAAQ,MACRC,IAAI,8EAEN,kBAACH,EAAA,EAAKO,KAAN,CAAWT,UAAU,sBACnB,kBAACE,EAAA,EAAKQ,MAAN,KAAaJ,KAAKC,MAAMc,aACxB,kBAACnB,EAAA,EAAKU,KAAN,CAAWZ,UAAU,WAArB,gBACaM,KAAKqB,MAAMC,MADxB,0BAGA,uBACES,KAAK,SACLrC,UAAU,0BACVgB,KAAK,+CACLE,OAAO,UAJT,YAUJ,kBAAChB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CACEH,UAAU,iBACVI,QAAQ,MACRC,IAAI,yEAEN,kBAACH,EAAA,EAAKO,KAAN,CAAWT,UAAU,sBACnB,kBAACE,EAAA,EAAKQ,MAAN,KAAaJ,KAAKC,MAAMgC,YACxB,kBAACrC,EAAA,EAAKU,KAAN,CAAWZ,UAAU,WAArB,mC,GAvEuByB,c,iBCAhBe,G,6KAEjB,OACE,kBAAC,IAAD,CAAWxC,UAAU,mBACnB,yBAAKyC,MAAM,aACT,yBAAKpC,IAAKqC,IAAK1C,UAAU,iBAAiB2C,IAAI,QAC9C,wBAAIF,MAAM,aAAanC,KAAKC,MAAMqC,OAClC,wBAAIH,MAAM,QAAQnC,KAAKC,MAAMsC,aAC7B,wBAAIJ,MAAM,SACV,uBAAGzC,UAAU,MAAMM,KAAKC,MAAMuC,MAC9B,kBAAChC,EAAA,EAAD,CAAQV,QAAQ,UAAUW,GAAC,EAACC,KAAK,YAAjC,sB,GAV6BS,cCC1BsB,EAAb,uKAII,OACE,yBAAK/C,UAAU,WACb,uBAAGgD,GAAG,QACN,kBAAC,EAAD,CACEhD,UAAU,MACV4C,MAAM,aACNC,YAAY,mBACZC,KAAK,0TAILG,KAAK,aAEP,6BAEA,wBAAIjD,UAAU,4BAAd,gBACA,6BACA,6BACA,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEA,UAAU,YACViB,SAAS,yDACTT,SAAS,gFACTW,OAAO,SACPR,WAAW,iHACXY,UAAU,8CACVH,SAAS,6FACTI,UAAU,SACVH,YAAY,oJAEd,8BAEF,6BACA,6BACA,wBAAIrB,UAAU,wBAAd,wBACA,6BACA,6BACA,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CACEA,UAAU,OACVuB,UAAU,oEACVf,SAAS,wGACTW,OAAO,SACPR,WAAW,iJACXM,SAAS,0BACTG,SAAS,uDACTI,UAAU,aACVH,YAAY,2KAEd,8BAEF,6BACA,6BACA,uBAAG2B,GAAG,YACN,wBAAIhD,UAAU,oBAAd,WACA,6BACA,6BACA,kBAAC,EAAD,CAASsC,KAAK,sDACd,6BACA,6BACA,6BACA,kBAACxB,EAAA,EAAD,CAAQV,QAAQ,UAAUW,GAAC,EAACC,KAAK,QAAjC,wBAGA,6BACA,6BACA,kCAtER,GAA0BS,aAAbsB,EACJG,YAAcH,EAAKI,K,UCMfC,EAAb,kDAGE,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAED8C,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK3B,MAAQ,CACX4B,WAAW,GALI,EAHrB,2DAaIjD,KAAK4B,SAAS,CACZqB,WAAYjD,KAAKqB,MAAM4B,cAd7B,+BAmBI,OACE,qCApBN,GAA6B9B,aAAhB2B,EACJF,YAAcE,EAAQD,KCXxB,IAAMK,EAAb,uKAII,OACE,6BACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CACEN,KAAK,WACLO,QAAQ,uCAEPpD,KAAKC,MAAMoD,eAXtB,GAA4BlC,aAAf+B,EACJN,YAAcM,EAAOL,K,UCGTS,E,uKAIjB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,S,GANRtB,aAAZmC,EACZV,YAAcU,EAAIT,KCC3B,IAAMa,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BJ,SAASC,EAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTzC,MAAK,SAAA6C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlD,QACf6C,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MC/DjE,IAAMC,EAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,EAAcH,SAASI,eAAe,QAE5CC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUR,GACvB,kBAAC,EAAD,OAEFI,GDMa,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,MAAwB7B,OAAOC,UAC3C6B,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMwB,MAAN,sBAEP/B,EAwCV,SAAkCO,GAEhC1C,MAAM0C,GACHzC,MAAK,SAAAoE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAMzE,MAAK,SAAA6C,GACjCA,EAAa6B,aAAa1E,MAAK,WAC7BoC,OAAOC,SAASsC,eAKpBnC,EAAgBC,MAGnBY,OAAM,WACLF,QAAQC,IACN,oEA5DAwB,CAAwBnC,GAGxBD,EAAgBC,OCvBxBoC,K","file":"static/js/main.0a934913.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Jag.10df0266.jpg\";","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"../Css/Project.css\";\r\n\r\nexport default class Project extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"ProjectWrap container-fluid\">\r\n        <CardDeck>\r\n          <Card className=\"col-xs-4\">\r\n            <Card.Img variant=\"top\" src={this.props.imageOne} />\r\n            <Card.Body>\r\n              <Card.Title>{this.props.firstTitle}</Card.Title>\r\n              <Card.Text>{this.props.firstText}</Card.Text>\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                a\r\n                href={this.props.firstBtn}\r\n                target=\"_blank\"\r\n              >\r\n                {this.props.btnTxt}\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className=\"col-xs-4\">\r\n            <Card.Img variant=\"top\" src={this.props.imageTwo} />\r\n            <Card.Body>\r\n              <Card.Title>{this.props.secondTitle}</Card.Title>\r\n              <Card.Text>{this.props.secondText}</Card.Text>\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                a\r\n                href={this.props.secondBtn}\r\n                target=\"_blank\"\r\n              >\r\n                {this.props.btnTxtTwo}\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </CardDeck>\r\n        <br />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\nimport \"../Css/Contact.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default class Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      repos: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.github.com/users/dani-dvp/repos\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          repos: data.length,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"container-fluid\">\r\n        <CardGroup className=\"cardWrapper mx-auto d-grid\">\r\n          <Card>\r\n            <Card.Img\r\n              className=\"rounded-circle\"\r\n              variant=\"top\"\r\n              src=\"https://sweamfo.se/wp-content/uploads/2013/11/LinkedIn-icon-logo-+small.gif\"\r\n            />\r\n            <Card.Body className=\"d-flex flex-column \">\r\n              <Card.Title>{this.props.firstTitle}</Card.Title>\r\n              <Card.Text className=\"mt-auto\">\r\n                <a\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  a\r\n                  href={this.props.link}\r\n                  target=\"_blank\"\r\n                >\r\n                  LinkedIn\r\n                </a>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img\r\n              className=\"rounded-circle\"\r\n              variant=\"top\"\r\n              src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\r\n            />\r\n            <Card.Body className=\"d-flex flex-column\">\r\n              <Card.Title>{this.props.secondTitle}</Card.Title>\r\n              <Card.Text className=\"mt-auto\">\r\n                HÃ¤r finns {this.state.repos} repos att kika igenom\r\n              </Card.Text>\r\n              <a\r\n                type=\"button\"\r\n                className=\"btn btn-success mt-auto\"\r\n                href=\"https://github.com/Dani-dvp?tab=repositories\"\r\n                target=\"_blank\"\r\n              >\r\n                Github\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img\r\n              className=\"rounded-circle\"\r\n              variant=\"top\"\r\n              src=\"https://www.cyclonis.com/images/2020/06/gmail-small-logo-765x402.png\"\r\n            />\r\n            <Card.Body className=\"d-flex flex-column\">\r\n              <Card.Title>{this.props.thirdTitle}</Card.Title>\r\n              <Card.Text className=\"mt-auto\">Kevin1995dani@gmail.com</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </CardGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Jag from \"../Images/Jag.jpg\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"../Css/Home.css\";\r\n\r\nexport default class Jumbotron extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"container-fluid\">\r\n        <div class=\"jumbotron\">\r\n          <img src={Jag} className=\"rounded-circle\" alt=\"...\" />\r\n          <h1 class=\"display-4\">{this.props.intro}</h1>\r\n          <h1 class=\"lead\">{this.props.description}</h1>\r\n          <hr class=\"my-4\" />\r\n          <p className=\"h3\">{this.props.text}</p>\r\n          <Button variant=\"primary\" a href=\"#contact\">\r\n            Kontakta mig\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Project from \"./Cards/Project\";\r\nimport Contact from \"./Cards/Contact\";\r\nimport Jumbotron from \"./Cards/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Css/Home.css\";\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <p id=\"top\"></p>\r\n        <Jumbotron\r\n          className=\"h-5\"\r\n          intro=\"Kevin Dani\"\r\n          description=\"Systemutvecklare\"\r\n          text=\"Jag Ã¤r en entusiastisk och detaljorienterad student med en passion\r\n          inom IT. Jobbar hÃ¥rt fÃ¶r att uppnÃ¥ de mÃ¥l som fÃ¶rvÃ¤ntas av mig. Ser\r\n          alltid fram emot nya utmaningar och Ã¤r Ã¶vertygad om att min kompetens\r\n          och positiva instÃ¤llning Ã¤r till stor fÃ¶rdel i alla yrkesroller.\"\r\n          Link=\"#contact\"\r\n        ></Jumbotron>\r\n        <br />\r\n\r\n        <h3 className=\"projects mx-auto d-block\">Mina Projekt</h3>\r\n        <br />\r\n        <br />\r\n        <div className=\"projects\">\r\n          <Project\r\n            className=\"eCommerce\"\r\n            firstBtn=\"https://github.com/DonOllario/Projektarbete-E-Commerce\"\r\n            imageOne=\"https://webbhotells.se/wp-content/uploads/2019/08/085124-que-es-ecommerce.jpg\"\r\n            btnTxt=\"Github\"\r\n            firstTitle=\"Ett projekt dÃ¤r jag och fyra till skapade en e-handel fÃ¶r olika produkter i form av en konsolapplikation\"\r\n            secondBtn=\"https://github.com/Dani-dvp/WebbApplikation\"\r\n            imageTwo=\"https://media-cdn.tripadvisor.com/media/photo-s/17/75/3f/d1/restaurant-in-valkenswaard.jpg\"\r\n            btnTxtTwo=\"Github\"\r\n            secondTitle=\"Vi skapade en hemsida dÃ¤r man kan lÃ¤sa reviews pÃ¥ olika restauranger och lÃ¤gga till nya restauranger om nÃ¥gon man vill ha saknas\"\r\n          ></Project>\r\n          <br />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <h3 className=\"jobs mx-auto d-block\">Arbetslivserfarenhet</h3>\r\n        <br />\r\n        <br />\r\n        <div className=\"jobs mx-auto d-grid\">\r\n          <Project\r\n            className=\"jobs\"\r\n            secondBtn=\"https://www.linkedin.com/company/stormgroup/?originalSubdomain=se\"\r\n            imageOne=\"https://cached-images.btdmtech.se/paf-e/s1/?p=/Globals/7f/2e/7f2e4da7-87c8-4074-a67a-da7e956797b7.jpg\"\r\n            btnTxt=\"Adient\"\r\n            firstTitle=\"Arbetade som eventsÃ¤ljare hos StormGroup pÃ¥ uppdrag fÃ¶r E-on pÃ¥ olika platser runt om VÃ¤stra GÃ¶taland frÃ¥n 2014 till 2015\"\r\n            firstBtn=\"https://www.adient.com/\"\r\n            imageTwo=\"https://i.ytimg.com/vi/akBwm8jM2As/maxresdefault.jpg\"\r\n            btnTxtTwo=\"StormGroup\"\r\n            secondTitle=\"Jag arbetade som montÃ¶r pÃ¥ en underleverantÃ¶r till Volvo vid namn Adient frÃ¥n 2015 till 2020. HÃ¤r monterade vi ihop stolarna fÃ¶r Volvos personbilar.\"\r\n          ></Project>\r\n          <br />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <a id=\"contact\"></a>\r\n        <h3 className=\" mx-auto d-block\">Kontakt</h3>\r\n        <br />\r\n        <br />\r\n        <Contact link=\"https://www.linkedin.com/in/kevin-dani-a27ab1172/\"></Contact>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Button variant=\"primary\" a href=\"#top\">\r\n          Tillbaka till toppen\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport \"./NavMenu.css\";\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        {/* <Navbar\r\n          className=\"navbar navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3 bg-light navbar\"\r\n          light\r\n        >\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n              Kevin Dani\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse\r\n              className=\"d-sm-inline-flex flex-sm-row-reverse\"\r\n              isOpen={!this.state.collapsed}\r\n              navbar\r\n            >\r\n              <ul className=\"navbar-nav flex-grow\"></ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar> */}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { NavMenu } from \"./NavMenu\";\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container\r\n          name=\"viewport\"\r\n          content=\"width=device-width, initial-scale=1\"\r\n        >\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { Layout } from \"./components/Layout\";\r\nimport { Home } from \"./components/Home\";\r\nimport Contact from \"./components/Cards/Contact\";\r\n\r\nimport \"./custom.css\";\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}